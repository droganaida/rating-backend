
var Pages = require('../models/pages').Page;

exports.get = function(req, res){

    //--------- Если пользователь зашел на главную страницу, достаем с алиасом 'main'
    var alias = 'main';

    //--------- Иначе ищем страницу с заданным путем
    if (req.params.alias){
        alias = req.params.alias;
    }

    Pages.findOne({alias: alias}, function(err, page){

        if (page) {

            //--------- Это конечно должно браться из базы, но у нас сильно упрощенная модель
            res.locals.title = '#BlondieCode - лайфхаки программиста. Рейтинг 5 звезд.';
            res.locals.htmldescription = 'Серверная часть с сохранением рейтинга в базу и записью в кэш пользователя.';

            //--------- Передаем найденную страницу на темплейту (там уже сохраненный рейтинг)
            res.locals.page = page;

            //--------- Но средний рейтинг посчитаем тут, чтобы не грузить клиент
            var average = 0;
            if (page.votes > 0){
                average = (page.rating/page.votes).toFixed(2);
            }
            res.locals.average = average;

            res.render('./main/main');

        } else {

            res.send(404, 'Нет тут ничего. Модератор плохо работает!');

        }

    });


};

exports.post = function(req, res){

    //***************************************************************//
    //--- Вот так себя ведет сервер без логики на бэкэнде ---//
    //***************************************************************//

//    console.log('С клиента пришла оценка ' + req.body.rating);
//    res.send('Нету сервера - нету мультиков :троллфейс:');

    


    //***************************************************************//
    //--- Вариант с сессией, куками и блэкджеком ---//
    //***************************************************************//

    console.log('req.session ' + JSON.stringify(req.session));

    //----- Проверяем есть ли уже в сессии поле voted
    //----- Если нет назначим его пустым массивом (тут будут номера страниц)
    if (!req.session.voted){
        req.session.voted = [];
    }

    //----- Если юзер еще не голосовал за эту страницу, считаем его голос
    if (req.session.voted.indexOf(req.body.id) == -1){

        req.session.voted.push(req.body.id);

        Pages.addRating(req.body.id, req.body.rating, function(err, opt){
            if (err){
                res.send(err);
            } else {

                //----- Для $.ajax не ошибка - это JSON, а что там без разницы
                //---- Сюда можно передать любые данные для клиента
                //----  Например свою оценку res.send({rating: req.body.rating})
                //---- Но в нашем случае вроде как нечего передавать =)
                res.send({ok: 'ok'});
            }
        })
    } else {
        //----- А если проголосовал, отсылаем его в лес
        //----- Время жизни куков настраиваем в конфиге (параметр maxAge)
        res.send('Я узнал тебя, засранец! Ты тут уже голосовал');
    }



    //***************************************************************//
    //--- Вариант без проверки куков (голосуют все сколько хотят) ---//
    //***************************************************************//

//    Pages.addRating(req.body.id, req.body.rating, function(err, opt){
//        if (err){
//            res.send(err);
//        } else {
//
//            //----- Для $.ajax не ошибка - это JSON, а что там без разницы
//            //---- Сюда можно передать любые данные для клиента
//            //----  Например свою оценку res.send({rating: req.body.rating})
//            //---- Но в нашем случае вроде как нечего передавать =)
//            res.send({ok: 'ok'});
//        }
//    })

};
